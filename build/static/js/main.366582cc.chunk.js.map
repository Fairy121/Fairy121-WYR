{"version":3,"sources":["components/CreateGame.js","components/GameCard.js","components/Games.js","App.js","serviceWorker.js","index.js"],"names":["CreateGame","props","showModal","state","class","setState","hideModal","showPreview","e","val","target","value","dataset","name","previewLeft","previewRight","username","title","changeCol","colors","forEach","col","console","log","selected","left","col01","right","col02","class_name","activeCol","class_rb","class_bg","class_gb","createGame","preventDefault","activeName","post","color","length","axios","votes","then","res","catch","error","response","data","msg","className","onClick","this","onChange","type","data-name","id","placeholder","data-col","style","background","Component","require","GameCard","useState","setRight","addVote","side","voteLeft","voteRight","newVote","put","err","leftCol","data-side","data-votes","data-id","rightCol","abbreviate","Games","getPosts","self","get","loaded","posts","map","key","_id","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.366582cc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default class CreateGame extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      class: \"hidden\",\r\n      username: \"\",\r\n      previewLeft: \"\",\r\n      previewRight: \"\",\r\n      title: \"\",\r\n\r\n      colors: [\r\n        {\r\n          name: \"rb\",\r\n          col01: \" #fc3d03\",\r\n          col02: \"#4359e8\"\r\n        },\r\n        {\r\n          name: \"bg\",\r\n          col01: \"#141413\",\r\n          col02: \"#ffcb6b\"\r\n        },\r\n        {\r\n          name: \"gb\",\r\n          col01: \"#6ad4a9\",\r\n          col02: \"#44b0eb\"\r\n        }\r\n      ],\r\n      selected: {\r\n        left: \" #fc3d03\",\r\n        right: \"#4359e8\"\r\n      },\r\n\r\n      class_rb: \"isActive\",\r\n      class_bg: \"\",\r\n      class_gb: \"\",\r\n      activeCol: {\r\n        name: \"rb\",\r\n        col01: \"#f5574c\",\r\n        col02: \"#4c68f5\"\r\n      }\r\n    };\r\n  }\r\n  showModal = () => {\r\n    if (this.state.class === \"hidden\") {\r\n      this.setState({\r\n        class: \"show\"\r\n      });\r\n    }\r\n  };\r\n  hideModal = () => {\r\n    if (this.state.class === \"show\") {\r\n      this.setState({\r\n        class: \"hidden\"\r\n      });\r\n    }\r\n  };\r\n  showPreview = e => {\r\n    let val = e.target.value;\r\n\r\n    switch (e.target.dataset.name) {\r\n      case \"i1\":\r\n        this.setState({ previewLeft: val });\r\n        break;\r\n      case \"i2\":\r\n        this.setState({ previewRight: val });\r\n        break;\r\n      case \"user\":\r\n        this.setState({ username: val });\r\n        break;\r\n      case \"title\":\r\n        this.setState({ title: val });\r\n    }\r\n  };\r\n  changeCol = e => {\r\n    this.state.colors.forEach(col => {\r\n      console.log(e.target);\r\n      if (e.target.dataset.col === col.name) {\r\n        this.setState({\r\n          selected: { left: col.col01, right: col.col02 }\r\n        });\r\n        const { name } = col;\r\n        const { class_name } = this.state;\r\n\r\n        this.setState({\r\n          activeCol: col\r\n        });\r\n        if (name === \"rb\") {\r\n          this.setState({ class_rb: \"isActive\", class_bg: \"\", class_gb: \"\" });\r\n        } else if (name === \"bg\") {\r\n          this.setState({ class_bg: \"isActive\", class_rb: \"\", class_gb: \"\" });\r\n        } else if (name === \"gb\") {\r\n          this.setState({ class_gb: \"isActive\", class_rb: \"\", class_bg: \"\" });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  createGame = e => {\r\n    e.preventDefault();\r\n\r\n    const {\r\n      activeCol,\r\n      previewLeft,\r\n      previewRight,\r\n      username,\r\n      title\r\n    } = this.state;\r\n    const { col01, col02 } = activeCol;\r\n    let activeName = \"\";\r\n    let votes = {\r\n      left: 0,\r\n      right: 0\r\n    };\r\n\r\n    let post = {\r\n      left: previewLeft,\r\n      right: previewRight\r\n    };\r\n    let color = {\r\n      left: col01,\r\n      right: col02\r\n    };\r\n\r\n    username.length === 0\r\n      ? (activeName = \"anonymous\")\r\n      : (activeName = username);\r\n    console.log(activeName);\r\n    axios\r\n      .post(\"/post/createPost\", {\r\n        username: activeName,\r\n        post,\r\n        color,\r\n        votes,\r\n        title\r\n      })\r\n      .then(function(res) {\r\n        console.log(res);\r\n      })\r\n      .catch(function(error) {\r\n        console.log(error.response.data.msg);\r\n      });\r\n    this.hideModal();\r\n  };\r\n\r\n  render() {\r\n    // color objects\r\n    // red and blue\r\n\r\n    return (\r\n      <div className=\"create-game-container\">\r\n        <div onClick={this.showModal} className=\"create-game-card\">\r\n          <p className=\"create-text\">create your own game</p>\r\n        </div>\r\n        <div className={`create-game-body ${this.state.class}`}>\r\n          <form className={`create-game-form `}>\r\n            <div onChange={this.showPreview} className=\"form-inner\">\r\n              <input\r\n                type=\"text\"\r\n                data-name=\"user\"\r\n                id=\"username\"\r\n                placeholder=\"choose a fun username\"\r\n              ></input>\r\n              <input\r\n                type=\"text\"\r\n                id=\"game-title\"\r\n                data-name=\"title\"\r\n                placeholder=\"choose a title\"\r\n              ></input>\r\n              <input\r\n                type=\"text\"\r\n                //input 1\r\n                data-name=\"i1\"\r\n                id=\"first-topic\"\r\n                name=\"topic-01\"\r\n                placeholder=\"first topic \"\r\n              ></input>\r\n\r\n              <input\r\n                data-name=\"i2\"\r\n                //input 2\r\n                type=\"text\"\r\n                id=\"second-topic\"\r\n                name=\"topic-02\"\r\n                placeholder=\"second topic\"\r\n              ></input>\r\n            </div>\r\n          </form>\r\n\r\n          <div className=\"game-selection\">\r\n            <i\r\n              onClick={this.hideModal}\r\n              data-name=\"exit\"\r\n              className=\" exit far fa-times-circle\"\r\n            ></i>\r\n            <p className=\"choose-col\">Choose a color combination</p>\r\n            <div onClick={this.changeCol} className=\"color-selection\">\r\n              <div\r\n                data-col=\"rb\"\r\n                className={`color-split  ${this.state.class_rb}`}\r\n                type=\"none\"\r\n              >\r\n                <div data-col=\"rb\" className=\"red-col\"></div>\r\n                <div data-col=\"rb\" className=\"blue-col\"></div>\r\n              </div>\r\n              <div\r\n                data-col=\"bg\"\r\n                className={`color-split ${this.state.class_bg}`}\r\n                type=\"none\"\r\n              >\r\n                <div data-col=\"bg\" className=\"dark-col\"></div>\r\n                <div data-col=\"bg\" className=\"gold-col\"></div>\r\n              </div>\r\n              <div\r\n                data-col=\"gb\"\r\n                className={`color-split ${this.state.class_gb}`}\r\n                type=\"none\"\r\n              >\r\n                <div data-col=\"gb\" className=\"green-col\"></div>\r\n                <div data-col=\"gb\" className=\"lblue-col\"></div>\r\n              </div>\r\n            </div>\r\n            <div className=\"game-preview\">\r\n              <div\r\n                style={{ background: this.state.selected.left }}\r\n                className=\"prev-left\"\r\n              >\r\n                {this.state.previewLeft}\r\n              </div>\r\n              <div\r\n                style={{ background: this.state.selected.right }}\r\n                className=\"prev-right\"\r\n              >\r\n                {this.state.previewRight}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <button onClick={this.createGame} className=\"create-btn\">\r\n            SUBMIT\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nlet abbreviate = require(\"number-abbreviate\");\r\n\r\nexport default function GameCard(props) {\r\n  const [showLeft, setLeft] = useState(false);\r\n  const [showRight, setRight] = useState(false);\r\n\r\n  function addVote(e) {\r\n    console.log(e.target);\r\n    let id = e.target.dataset.id;\r\n    let left, right;\r\n    if (e.target.dataset.side === \"right\") {\r\n      left = props.voteLeft;\r\n      right = props.voteRight + 1;\r\n      setRight(true);\r\n    } else {\r\n      left = props.voteLeft + 1;\r\n      right = props.voteRight;\r\n    }\r\n\r\n    let newVote = {\r\n      left,\r\n      right\r\n    };\r\n    axios\r\n      .put(\"/post/updateVote\", {\r\n        id,\r\n        votes: newVote\r\n      })\r\n      .then(function(res) {\r\n        console.log(res);\r\n      })\r\n      .catch(function(err) {\r\n        console.log(err.response);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"game-card\">\r\n      <nav className=\"game-card-nav\">\r\n        <p className=\"card-title\">{props.title}</p>\r\n        <p className=\"creator\">created by {props.username}</p>\r\n      </nav>\r\n      <div className=\"game-body\">\r\n        <div style={{ background: props.leftCol }} className=\"left-side\">\r\n          <h1>{props.left}</h1>\r\n\r\n          <div\r\n            data-side=\"left\"\r\n            data-votes={props.voteLeft}\r\n            style={{ background: props.leftCol }}\r\n            data-id={props.id}\r\n            onClick={addVote}\r\n            className=\"vote-count count-right\"\r\n          >\r\n            <p className=\"vote\">{props.voteLeft}</p>\r\n          </div>\r\n        </div>\r\n        <div style={{ background: props.rightCol }} className=\"right-side\">\r\n          {\" \"}\r\n          <h1>{props.right}</h1>\r\n          <div\r\n            data-side=\"right\"\r\n            data-votes={props.voteRight}\r\n            data-id={props.id}\r\n            style={{ background: props.rightCol }}\r\n            onClick={addVote}\r\n            className=\"vote-count count-left\"\r\n          >\r\n            <p className=\"vote\">{props.voteRight}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport GameCard from \"./GameCard\";\r\nimport axios from \"axios\";\r\nlet abbreviate = require(\"number-abbreviate\");\r\n\r\nexport default class Games extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      posts: [],\r\n      loaded: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getPosts();\r\n  }\r\n  getPosts = () => {\r\n    let self = this;\r\n    axios\r\n      .get(\"/post/getPosts\")\r\n      .then(function (res) {\r\n        console.log(res);\r\n        self.setState({\r\n          loaded: true,\r\n          posts: res.data,\r\n        });\r\n      })\r\n      .catch(function (err) {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    let result;\r\n    const { posts } = this.state;\r\n\r\n    let left, right;\r\n    let self = this;\r\n    console.log(posts);\r\n    return (\r\n      <div className=\"games-list\">\r\n        {this.state.loaded\r\n          ? posts.map(function (post) {\r\n              {\r\n                console.log(post);\r\n                left = abbreviate(post.votes.left);\r\n                right = abbreviate(post.votes.right);\r\n              }\r\n              return (\r\n                <GameCard\r\n                  key={post._id}\r\n                  username={post.username}\r\n                  left={post.post.left}\r\n                  leftCol={post.color.left}\r\n                  rightCol={post.color.right}\r\n                  right={post.post.right}\r\n                  voteLeft={left}\r\n                  voteRight={right}\r\n                  id={post._id}\r\n                  title={post.title}\r\n                />\r\n              );\r\n            })\r\n          : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport CreateGame from \"./components/CreateGame\";\nimport Games from \"./components/Games\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"site-title\">Would you Rather?</h1>\n      <CreateGame />\n      <Games />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}